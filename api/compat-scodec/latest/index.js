Index.PACKAGES = {"swave" : [], "swave.compat" : [], "swave.compat.scodec" : [], "swave.compat.scodec.impl" : [{"name" : "swave.compat.scodec.impl.ByteVectorBytes", "shortDescription" : "", "members_class" : [{"label" : "foreach", "tail" : "(value: ByteVector, f: (Byte) ⇒ Unit): Unit", "member" : "swave.compat.scodec.impl.ByteVectorBytes.foreach", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#foreach(value:scodec.bits.ByteVector,f:Byte=>Unit):Unit", "kind" : "def"}, {"label" : "foldRight", "tail" : "(value: ByteVector, z: A, f: (Byte, A) ⇒ A): A", "member" : "swave.compat.scodec.impl.ByteVectorBytes.foldRight", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#foldRight[A](value:scodec.bits.ByteVector,z:A,f:(Byte,A)=>A):A", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(value: ByteVector, z: A, f: (A, Byte) ⇒ A): A", "member" : "swave.compat.scodec.impl.ByteVectorBytes.foldLeft", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#foldLeft[A](value:scodec.bits.ByteVector,z:A,f:(A,Byte)=>A):A", "kind" : "def"}, {"label" : "decodeString", "tail" : "(value: ByteVector, charset: Charset): Either[CharacterCodingException, String]", "member" : "swave.compat.scodec.impl.ByteVectorBytes.decodeString", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#decodeString(value:scodec.bits.ByteVector,charset:java.nio.charset.Charset):Either[java.nio.charset.CharacterCodingException,String]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(value: ByteVector): Seq[Byte]", "member" : "swave.compat.scodec.impl.ByteVectorBytes.toSeq", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#toSeq(value:scodec.bits.ByteVector):Seq[Byte]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(value: ByteVector): IndexedSeq[Byte]", "member" : "swave.compat.scodec.impl.ByteVectorBytes.toIndexedSeq", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#toIndexedSeq(value:scodec.bits.ByteVector):IndexedSeq[Byte]", "kind" : "def"}, {"label" : "toByteBuffer", "tail" : "(value: ByteVector): ByteBuffer", "member" : "swave.compat.scodec.impl.ByteVectorBytes.toByteBuffer", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#toByteBuffer(value:scodec.bits.ByteVector):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "copyToOutputStream", "tail" : "(value: ByteVector, s: OutputStream): Unit", "member" : "swave.compat.scodec.impl.ByteVectorBytes.copyToOutputStream", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#copyToOutputStream(value:scodec.bits.ByteVector,s:java.io.OutputStream):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(value: ByteVector, buffer: ByteBuffer): Int", "member" : "swave.compat.scodec.impl.ByteVectorBytes.copyToBuffer", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#copyToBuffer(value:scodec.bits.ByteVector,buffer:java.nio.ByteBuffer):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(value: ByteVector, sourceOffset: Long, xs: Array[Byte], destOffset: Int, len: Int): Unit", "member" : "swave.compat.scodec.impl.ByteVectorBytes.copyToArray", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#copyToArray(value:scodec.bits.ByteVector,sourceOffset:Long,xs:Array[Byte],destOffset:Int,len:Int):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(value: ByteVector, xs: Array[Byte], offset: Int): Unit", "member" : "swave.compat.scodec.impl.ByteVectorBytes.copyToArray", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#copyToArray(value:scodec.bits.ByteVector,xs:Array[Byte],offset:Int):Unit", "kind" : "def"}, {"label" : "toArray", "tail" : "(value: ByteVector): Array[Byte]", "member" : "swave.compat.scodec.impl.ByteVectorBytes.toArray", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#toArray(value:scodec.bits.ByteVector):Array[Byte]", "kind" : "def"}, {"label" : "compact", "tail" : "(value: ByteVector): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.compact", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#compact(value:scodec.bits.ByteVector):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "reverse", "tail" : "(value: ByteVector): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.reverse", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#reverse(value:scodec.bits.ByteVector):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "map", "tail" : "(value: ByteVector, f: (Byte) ⇒ Byte): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.map", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#map(value:scodec.bits.ByteVector,f:Byte=>Byte):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "take", "tail" : "(value: ByteVector, n: Long): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.take", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#take(value:scodec.bits.ByteVector,n:Long):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "drop", "tail" : "(value: ByteVector, n: Long): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.drop", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#drop(value:scodec.bits.ByteVector,n:Long):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "concat", "tail" : "(byte: Byte, value: ByteVector): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.concat", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#concat(byte:Byte,value:scodec.bits.ByteVector):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "concat", "tail" : "(value: ByteVector, byte: Byte): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.concat", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#concat(value:scodec.bits.ByteVector,byte:Byte):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "concat", "tail" : "(value: ByteVector, other: ByteVector): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.concat", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#concat(value:scodec.bits.ByteVector,other:scodec.bits.ByteVector):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "update", "tail" : "(value: ByteVector, ix: Long, byte: Byte): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.update", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#update(value:scodec.bits.ByteVector,ix:Long,byte:Byte):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(value: ByteVector, slice: ByteVector, startIx: Long): Long", "member" : "swave.compat.scodec.impl.ByteVectorBytes.indexOfSlice", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#indexOfSlice(value:scodec.bits.ByteVector,slice:scodec.bits.ByteVector,startIx:Long):Long", "kind" : "def"}, {"label" : "byteAt", "tail" : "(value: ByteVector, ix: Long): Byte", "member" : "swave.compat.scodec.impl.ByteVectorBytes.byteAt", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#byteAt(value:scodec.bits.ByteVector,ix:Long):Byte", "kind" : "def"}, {"label" : "size", "tail" : "(value: ByteVector): Long", "member" : "swave.compat.scodec.impl.ByteVectorBytes.size", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#size(value:scodec.bits.ByteVector):Long", "kind" : "def"}, {"label" : "encodeStringStrict", "tail" : "(str: String, charset: Charset): Either[CharacterCodingException, ByteVector]", "member" : "swave.compat.scodec.impl.ByteVectorBytes.encodeStringStrict", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#encodeStringStrict(str:String,charset:java.nio.charset.Charset):Either[java.nio.charset.CharacterCodingException,scodec.bits.ByteVector]", "kind" : "def"}, {"label" : "encodeString", "tail" : "(str: String, charset: Charset): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.encodeString", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#encodeString(str:String,charset:java.nio.charset.Charset):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "view", "tail" : "(bytes: ByteBuffer): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.view", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#view(bytes:java.nio.ByteBuffer):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "view", "tail" : "(bytes: Array[Byte]): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.view", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#view(bytes:Array[Byte]):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "apply", "tail" : "(bs: GenTraversableOnce[Byte]): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.apply", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#apply(bs:scala.collection.GenTraversableOnce[Byte]):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "apply", "tail" : "(buffer: ByteBuffer): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.apply", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#apply(buffer:java.nio.ByteBuffer):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "apply", "tail" : "(bytes: Vector[Byte]): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.apply", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#apply(bytes:Vector[Byte]):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "apply", "tail" : "(bytes: A*)(arg0: Integral[A]): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.apply", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#apply[A](bytes:A*)(implicitevidence$2:Integral[A]):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "apply", "tail" : "(bytes: Array[Byte], offset: Int, length: Int): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.apply", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#apply(bytes:Array[Byte],offset:Int,length:Int):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "apply", "tail" : "(array: Array[Byte]): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.apply", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#apply(array:Array[Byte]):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "fill", "tail" : "(size: Long)(byte: A)(arg0: Integral[A]): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.fill", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#fill[A](size:Long)(byte:A)(implicitevidence$1:Integral[A]):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "empty", "tail" : "(): ByteVector", "member" : "swave.compat.scodec.impl.ByteVectorBytes.empty", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#empty:scodec.bits.ByteVector", "kind" : "def"}, {"member" : "swave.compat.scodec.impl.ByteVectorBytes#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "swave\/compat\/scodec\/impl\/ByteVectorBytes.html", "kind" : "class"}]};